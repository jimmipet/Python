import numpy as np

# Определяем функцию, которую нужно приблизить интегрированием
def f(x):
    return 1

# Определяем ядро интегрального уравнения
def K(x, s):
    return np.exp(x - s)

# Определяем функцию для решения уравнения Вольтерра методом трапеций
def solve(N):
    h = 1/N
    x = np.linspace(0, 1, N+1)
    y = np.zeros(N+1)
    y[0] = f(x[0])
    for i in range(1, N+1):
        # Аппроксимируем интеграл на текущем отрезке с помощью формулы трапеции
        integral_approx = h/2 * \
            (np.exp(x[i]-x[i-1]) * y[i] + np.exp(x[i]-x[i-1]-h) * y[i-1])
        # Решаем уравнение, подставляя аппроксимацию интеграла
        y[i] = (1 + integral_approx) / (1 - h/2 * np.exp(x[i]))
    return x, y

# Решаем уравнение Вольтерра методом трапеций для N = 10, 50, 100, 500
N_values = [10, 50, 100, 500]
for N in N_values:
    x, y = solve(N)
    print("Приближенное решение для N =", N)
    print(y)
