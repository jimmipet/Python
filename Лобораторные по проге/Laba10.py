import numpy as np
from scipy.optimize import minimize

# Задаем параметры функции
a, b, c, d = 12, -0.3, 1.21, 0.22

# Определяем функцию, которую будем минимизировать
def func(x):
    return a*x[0] + b*x[1] + np.exp(c*x[0]**2 + d*x[1]**2)

# Определяем градиент функции
def grad(x):
    return np.array([a + 2*c*x[0]*np.exp(c*x[0]**2 + d*x[1]**2),
                     b + 2*d*x[1]*np.exp(c*x[0]**2 + d*x[1]**2)])

# Задаем начальное значение для оптимизации
x0 = np.array([0, 0])

# Минимизируем функцию методом сопряженных градиентов
res = minimize(func, x0, method='CG', jac=grad, tol=1e-6)
# CG - метод сопряженных градиентов
#jac -метод вычисления вектора градиента

# Выводим результаты
print("Минимум функции:", res.fun)
print("Аргумент минимума:", res.x)

